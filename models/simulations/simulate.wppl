// simulates model forward with given params/context and prints results to stout:
// webppl simulate.wppl --require ../refModule/ -- --modelVersion colorSize 

var globalConfig = {modelVersion: [argv.modelVersion]};

// then set base params and version-specific params (could also loop over multiple...)
var paramConfig = {
  base : {
    alpha : _.range(5, 36, 5), // all models: soft-max optimality (0,20)
    costWeight : [0]           // all models: relative weight on cost (0,1)
  },
  colorSize : {
    colorTyp : [.5, .6, .7, .8, .9, .95, .999], // typicality of color modifiers (.5,1)
    sizeTyp :  [.5, .6, .7, .8, .9, .95, .999], // typicality of size modifiers (.5,1)
    colorVsSizeCost : [.5],  // relative cost of producing color (w=0) vs. size (w=1)
    typWeight : [1]          // fixed value assumed by colorSize model; not really a param
  },
  typicalityNominal : {
    lengthVsFreqCost: [.5],  // relative weight on length (w=0) vs. freq (w=1)
    typWeight : [1]          // how much to stretch empirical typ values
  }
};

// list of objects in context (target 1st)
var contexts = refModule.getTestContexts(argv.modelVersion);

// Compile the appropriate params for chosen modelVersion 
var params = extend(globalConfig, paramConfig.base, (
  globalConfig.modelVersion[0] === 'colorSize' ?
    paramConfig.colorSize :
    paramConfig.typicalityNominal
));

console.log(refModule.obj_product(params));
foreach(_.keys(contexts), function(contextName) {
  foreach(refModule.obj_product(params), function(paramSet) {
    var context = contexts[contextName];
    console.log('running model with params:');
    console.log(paramSet);
    console.log('on context:');
    console.log(context);
    console.log('lexicon');
    console.log(refModule.constructLexicon(paramSet));
    var speakerModel = initializeModel(extend(paramSet, {
      lexicon: refModule.constructLexicon(paramSet)
    }));
    console.log(speakerModel(context[0], context));
  });  
});

// refModule.writeERP(speakerModel(context[0], context),[],"simulations/koolen_exp2_high.csv",4)
