// simulates model forward with given params/context and prints results to stout:
// webppl simulate.wppl --require ./refModule/

// choose one of the three versions
// (M1): colorSize
// (M2): typicality
// (M3): nominal
var globalConfig = {modelVersion: 'colorSize'};

// then set base params and version-specific params (could also loop over multiple...)
var paramConfig = {
  base : {
    alpha : 30,              // all models: soft-max optimality (0,20)
    costWeight : 0         // all models: relative weight on cost (0,1)
  },
  colorSize : {
    colorTyp : .99,         // typicality of color modifiers (.5,1)
    sizeTyp : .8,          // typicality of size modifiers (.5,1)
    colorVsSizeCost : .5,  // relative cost of producing color (w=0) vs. size (w=1)
    typWeight : 1          // fixed value assumed by colorSize model; not really a param
  },
  typicalityNominal : {
    lengthVsFreqCost: .5,  // relative weight on length (w=0) vs. freq (w=1)
    typWeight : 1          // how much to stretch empirical typ values
  }
};

// list of objects in context (target 1st)
var testContexts = {
  'colorSize' :    [["big", "red", "chair"],
                   ["big", "red", "fan"],
                   ["small", "red", "desk"],
                   ["small", "red", "tv"],
                   ["big", "red", "desk"],
                   ["small", "red", "chair"],
                   ["big", "red", "fan"],                                          
                   ["big", "red", "couch"]]
// exp 2, high variation:
  // [["small", "brown", "chair"],
  //                ["big", "blue", "desk"],
  //                ["small", "gray", "fan"],
  //                ["big", "brown", "chair"],
  //                ["small", "red", "couch"],
  //                ["big", "gray", "desk"],
  //                ["small", "green", "tv"],                                          
  //                ["big", "blue", "couch"]]
// exp 2, low variation:
//   [["big", "red", "chair"],
//                    ["big", "red", "fan"],
//                    ["small", "red", "desk"],
//                    ["small", "red", "tv"],
//                    ["big", "red", "desk"],
//                    ["small", "red", "chair"],
//                    ["big", "red", "fan"],                                          
//                    ["big", "red", "couch"]]
  //exp 1, high variation:
  // [["small", "blue", "couch"],
  //                  ["big", "gray", "chair"],
  //                  ["small", "green", "tv"],
  //                  ["big", "green", "fan"],
  //                  ["big", "red", "fan"],
  //                  ["big", "red", "desk"],
  //                  ["big", "brown", "tv"],                                          
  //                  ["big", "gray", "chair"]]
  // exp 1, low variation:
  // [["big", "green", "fan"], ["big", "green", "tv"],
		//  ["big", "green", "desk"], ["big", "green", "couch"],
		//  ["big", "green", "desk"], ["big", "green", "chair"],
		//  ["big", "green", "couch"], ["big", "green", "chair"]],
  // 'nominal' : [['dalmatian'], ['greyhound'], ['horse']],
  // 'typicality': [['blue', 'banana'], ['blue', 'apple'], ['pink', 'carrot']]
};

// Compile the appropriate params for chosen modelVersion 
var params = extend(globalConfig, paramConfig.base, (
  globalConfig.modelVersion === 'colorSize' ?
    paramConfig.colorSize :
    paramConfig.typicalityNominal
));

var context = testContexts[params.modelVersion];

console.log('running model with params:');
console.log(params);
console.log('on context:');
console.log(context);

var speakerModel = initializeModel(extend(params, {
  lexicon: refModule.constructLexicon(params)
}));

console.log(speakerModel(context[0], context));
// refModule.writeERP(speakerModel(context[0], context),[],"simulations/koolen_exp1_low.csv",4)
// refModule.writeERP(speakerModel(context[0], context),[],"simulations/koolen_exp1_high.csv",4)
refModule.writeERP(speakerModel(context[0], context),[],"simulations/koolen_exp2_low.csv",4)
// refModule.writeERP(speakerModel(context[0], context),[],"simulations/koolen_exp2_high.csv",4)
